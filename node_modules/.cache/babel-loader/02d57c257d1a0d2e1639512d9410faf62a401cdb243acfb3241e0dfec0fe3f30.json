{"ast":null,"code":"var _jsxFileName = \"/Users/seanallen/Desktop/passwordValidator/password-validator/src/password-and-confirm-password-validation/PasswordAndConfirmPasswordValidation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PasswordInputField from \"./PasswordInputField\";\nimport ConfirmPasswordInputField from \"./ConfirmPasswordInputField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordAndConfirmPasswordValidation() {\n  _s();\n  const [passwordError, setPasswordErr] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  const handlePasswordChange = evnt => {\n    const passwordInputValue = evnt.target.value.trim();\n    const passwordInputFieldName = evnt.target.name;\n    const NewPasswordInput = {\n      ...passwordInput,\n      [passwordInputFieldName]: passwordInputValue\n    };\n    setPasswordInput(NewPasswordInput);\n  };\n  const handleValidation = evnt => {\n    const passwordInputValue = evnt.target.value.trim();\n    const passwordInputFieldName = evnt.target.name;\n    if (passwordInputFieldName === 'password') {\n      const uppercaseRegExp = /(?=.*?[A-Z])/;\n      const lowercaseRegExp = /(?=.*?[a-z])/;\n      const digitsRegExp = /(?=.*?[0-9])/;\n      const specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\n      const minLengthRegExp = /.{6,}/;\n      const passwordLength = passwordInputValue.length;\n      const uppercasePassword = uppercaseRegExp.test(passwordInputValue);\n      const lowercasePassword = lowercaseRegExp.test(passwordInputValue);\n      const digitsPassword = digitsRegExp.test(passwordInputValue);\n      const specialCharPassword = specialCharRegExp.test(passwordInputValue);\n      const minLengthPassword = minLengthRegExp.test(passwordInputValue);\n      let errMsg = \"\";\n      if (passwordLength === 0) {\n        errMsg = \"Password is empty\";\n      } else if (!uppercasePassword) {\n        errMsg = \"At least one Uppercase\";\n      } else if (!lowercasePassword) {\n        errMsg = \"At least one Lowercase\";\n      } else if (!digitsPassword) {\n        errMsg = \"At least one digit\";\n      } else if (!specialCharPassword) {\n        errMsg = \"At least one Special Characters\";\n      } else if (!minLengthPassword) {\n        errMsg = \"At least minumum 6 characters\";\n      } else {\n        errMsg = \"\";\n      }\n      setPasswordErr(errMsg);\n    }\n\n    // for confirm password\n    if (passwordInputFieldName === \"confirmPassword\" || passwordInputFieldName === \"password\" && passwordInput.confirmPassword.length > 0) {\n      if (passwordInput.confirmPassword !== passwordInput.password) {\n        setConfirmPasswordError(\"Confirm password is not matched\");\n      } else {\n        setConfirmPasswordError(\"\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-center text-center m-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Password Validator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PasswordInputField, {\n        handlePasswordChange: handlePasswordChange,\n        handleValidation: handleValidation,\n        passwordValue: passwordInput.password,\n        passwordError: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmPasswordInputField, {\n        handlePasswordChange: handlePasswordChange,\n        handleValidation: handleValidation,\n        confirmPasswordValue: passwordInput.confirmPassword,\n        confirmPasswordError: confirmPasswordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(PasswordAndConfirmPasswordValidation, \"EF5NoIK7Jp/Lnb8Iv/AR1gHEHew=\");\n_c = PasswordAndConfirmPasswordValidation;\nexport default PasswordAndConfirmPasswordValidation;\nvar _c;\n$RefreshReg$(_c, \"PasswordAndConfirmPasswordValidation\");","map":{"version":3,"names":["React","useState","PasswordInputField","ConfirmPasswordInputField","jsxDEV","_jsxDEV","PasswordAndConfirmPasswordValidation","_s","passwordError","setPasswordErr","confirmPasswordError","setConfirmPasswordError","passwordInput","setPasswordInput","password","confirmPassword","handlePasswordChange","evnt","passwordInputValue","target","value","trim","passwordInputFieldName","name","NewPasswordInput","handleValidation","uppercaseRegExp","lowercaseRegExp","digitsRegExp","specialCharRegExp","minLengthRegExp","passwordLength","length","uppercasePassword","test","lowercasePassword","digitsPassword","specialCharPassword","minLengthPassword","errMsg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","passwordValue","confirmPasswordValue","_c","$RefreshReg$"],"sources":["/Users/seanallen/Desktop/passwordValidator/password-validator/src/password-and-confirm-password-validation/PasswordAndConfirmPasswordValidation.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PasswordInputField from \"./PasswordInputField\";\nimport ConfirmPasswordInputField from \"./ConfirmPasswordInputField\";\nfunction PasswordAndConfirmPasswordValidation(){\n\nconst [passwordError, setPasswordErr] = useState(\"\");\nconst [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\nconst [passwordInput, setPasswordInput]= useState({\n    password:'',\n    confirmPassword:''\n})\n\nconst handlePasswordChange =(evnt)=>{\n\n    const passwordInputValue = evnt.target.value.trim();\n    const passwordInputFieldName = evnt.target.name;\n    const NewPasswordInput = {...passwordInput,[passwordInputFieldName]:passwordInputValue}\n    setPasswordInput(NewPasswordInput);\n    \n}\nconst handleValidation= (evnt)=>{\n\n    const passwordInputValue = evnt.target.value.trim();\n    const passwordInputFieldName = evnt.target.name;\n\nif(passwordInputFieldName==='password'){\n    const uppercaseRegExp   = /(?=.*?[A-Z])/;\n    const lowercaseRegExp   = /(?=.*?[a-z])/;\n    const digitsRegExp      = /(?=.*?[0-9])/;\n    const specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\n    const minLengthRegExp   = /.{6,}/;\n\n    const passwordLength =      passwordInputValue.length;\n    const uppercasePassword =   uppercaseRegExp.test(passwordInputValue);\n    const lowercasePassword =   lowercaseRegExp.test(passwordInputValue);\n    const digitsPassword =      digitsRegExp.test(passwordInputValue);\n    const specialCharPassword = specialCharRegExp.test(passwordInputValue);\n    const minLengthPassword =   minLengthRegExp.test(passwordInputValue);\n\n    let errMsg =\"\";\n    if(passwordLength===0){\n            errMsg=\"Password is empty\";\n    }else if(!uppercasePassword){\n            errMsg=\"At least one Uppercase\";\n    }else if(!lowercasePassword){\n            errMsg=\"At least one Lowercase\";\n    }else if(!digitsPassword){\n            errMsg=\"At least one digit\";\n    }else if(!specialCharPassword){\n            errMsg=\"At least one Special Characters\";\n    }else if(!minLengthPassword){\n            errMsg=\"At least minumum 6 characters\";\n    }else{\n        errMsg=\"\";\n    }\n    setPasswordErr(errMsg);\n    }\n\n    // for confirm password\n    if(passwordInputFieldName=== \"confirmPassword\" || (passwordInputFieldName===\"password\" && passwordInput.confirmPassword.length>0) ){\n            \n        if(passwordInput.confirmPassword!==passwordInput.password)\n        {\n        setConfirmPasswordError(\"Confirm password is not matched\");\n        }else{\n        setConfirmPasswordError(\"\");\n        }\n        \n    }\n\n}\n\n    return(\n        <div className=\"row justify-content-center text-center m-8\">\n            <div className=\"col-sm-4\">\n                <h1>Password Validator</h1>\n                <PasswordInputField \n                handlePasswordChange={handlePasswordChange} \n                handleValidation={handleValidation} \n                passwordValue={passwordInput.password} \n                passwordError={passwordError}/>\n                <ConfirmPasswordInputField \n                handlePasswordChange={handlePasswordChange} \n                handleValidation={handleValidation} \n                confirmPasswordValue={passwordInput.confirmPassword} \n                confirmPasswordError={confirmPasswordError}/>\n            </div>\n        </div>\n    );\n}\n\nexport default PasswordAndConfirmPasswordValidation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}